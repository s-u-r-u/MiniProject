name: Java CI with Maven

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B clean install package --file pom.xml

      - name: Export JAR file
        id: jar_file
        run: echo "::set-output name=jar_file_name::$(ls target/*.jar)"

      - name: JAR file name
        run: echo "Generated JAR file: ${{ steps.jar_file.outputs.jar_file_name }}"

      - name: Saving artifacts
        run: mkdir -p staging && cp target/*.jar staging/

      - name: Generate settings.xml for Maven Builds
        uses: whelk-io/maven-settings-xml-action@v21

      - name: Persist Artifact
        uses: actions/upload-artifact@v2
        with:
          name: maven-artifacts
          path: staging

  Analysis:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: maven-artifacts
          path: staging

      - name: Analyze with SonarQube
        uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: http://44.204.24.244:9000
        with:
          args:
            -Dsonar.projectKey=MiniProject
