name: Java CI with Maven, Sonarqube, Nexus and Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
permissions:
  pull-requests: read

jobs:
  Building_with_Maven_and_Nexus_Repository:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B clean install package --file pom.xml
      - name: Export JAR file
        run: export JAR_FILE=$(ls target/*.jar)
      - name: Persist Artifact
        uses: actions/upload-artifact@v2
        with:
          name: maven-artifacts
          path: target
      - name: Print package location
        run: |
          echo "Maven package file is located at: $(find . -type f -name '*.jar')"
      - name: Analyze with SonarQube
        uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          SONAR_TOKEN: sqp_7b8cc3087efed5ef8c0af83f8d95f055598cfca9   
          SONAR_HOST_URL: http://34.238.234.205:9000  
        with:
          args:
            -Dsonar.projectKey=MiniProject
            -Dsonar.java.binaries=./target
      - name: Nexus Repo Publish
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
          serverUrl: http://54.86.74.118:8081/
          username: admin
          password: Suraj@764001
          format: maven2
          repository: MiniProject
          coordinates: com.example:app:1.0.0
          filename: ./target/MiniProject-1.0-SNAPSHOT.jar

  Building_Docker-Image_and_pushing_to_DockerHub:
    runs-on: ubuntu-latest
    needs: Building_with_Maven_and_Nexus_Repository
    if: ${{ needs.Building_with_Maven_and_Nexus_Repository.result == 'success' }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B clean install package --file pom.xml
      - name: Export JAR file
        run: export JAR_FILE=$(ls target/*.jar)
      - name: remove files
        run: sudo rm -rf /opt/pipx/venvs/ansible-core/lib/python3.10/site-packages/ansible_collections/cyberark/conjur/roles/conjur_host_identity/tests/.dockerignore /usr/local/lib/heroku/node_modules/@heroku-cli/plugin-redis-v5/node_modules/cpu-features/deps/cpu_features/.dockerignore /home/runneradmin/.nvm/.dockerignore /home/linuxbrew/.linuxbrew/Homebrew/.dockerignore /home/runner/.nvm/.dockerignore /home/runner/work/_actions/docker/login-action/f4ef78c080cd8ba55a85445d5b36e214a81df20a/.dockerignore /home/runner/work/_actions/docker/metadata-action/9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7/.dockerignore /etc/skel/.nvm/.dockerignore
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        run: docker build -f ./Dockerfile.yml -t docker.io/surusuraj200021/mini-project:latest .
      - name: Push Docker image to Docker Hub
        run: docker push docker.io/surusuraj200021/mini-project:latest
